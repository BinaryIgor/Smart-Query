DROP TABLE IF EXISTS author;
CREATE TABLE author (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,
	name VARCHAR(50) NOT NULL UNIQUE,
	alias VARCHAR(50) NOT NULL UNIQUE,
	PRIMARY KEY (id)
);

DROP TABLE IF EXISTS book;
CREATE TABLE book (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,
	author_id INT UNSIGNED NOT NULL,
	title VARCHAR(100) NOT NULL UNIQUE,
	PRIMARY KEY (id),
	FOREIGN KEY (author_id) REFERENCES author(id) ON DELETE CASCADE
);

DROP TABLE IF EXISTS user;
CREATE TABLE user (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,
	name VARCHAR(100) UNIQUE,
	PRIMARY KEY (id)
);

DROP TABLE IF EXISTS user_book;
CREATE TABLE user_book (
    user_id INT UNSIGNED NOT NULL,
	book_id INT UNSIGNED NOT NULL,
	FOREIGN KEY (user_id) REFERENCES user(id) ON DELETE CASCADE,
	FOREIGN KEY (book_id) REFERENCES book(id) ON DELETE CASCADE,
	PRIMARY KEY (user_id, book_id)
);

DROP TABLE IF EXISTS user;
CREATE TABLE user (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,
	name VARCHAR(100) UNIQUE,
	PRIMARY KEY (id)
);

DROP TABLE IF EXISTS user_book;
CREATE TABLE user_book (
    user_id INT UNSIGNED NOT NULL,
	book_id INT UNSIGNED NOT NULL,
	FOREIGN KEY (user_id) REFERENCES user(id) ON DELETE CASCADE,
	FOREIGN KEY (book_id) REFERENCES book(id) ON DELETE CASCADE,
	PRIMARY KEY (user_id, book_id)
);

DROP TABLE IF EXISTS organism;
CREATE TABLE organism (
	dna VARCHAR(255) NOT NULL,
	PRIMARY KEY (dna)
);